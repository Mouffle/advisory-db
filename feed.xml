<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>RustSec Advisories</title><id>https://rustsec.org/feed.xml</id><updated>2024-01-21T12:00:00+00:00</updated><author><name>RustSec</name></author><icon>https://rustsec.org/favicon.ico</icon><link href="https://rustsec.org/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rustsec.org/" rel="alternate" type="text/html"/><subtitle xml:lang="en">Security advisories filed against Rust crates</subtitle><entry><title>RUSTSEC-2024-0004: cosmwasm is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0004.html</id><updated>2024-01-21T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0004.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0004: cosmwasm is unmaintained"/><published>2024-01-21T12:00:00+00:00</published><summary xml:lang="en">`cosmwasm` is unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/cosmwasm/RUSTSEC-2024-0004.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/cosmwasm/RUSTSEC-2024-0004.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0004&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0004
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;cosmwasm&lt;/code&gt; is unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-20&quot;&gt;
          January 20, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-21&quot;&gt;
          January 21, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/cosmwasm.html&quot;&gt;cosmwasm&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/cosmwasm&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/CosmWasm/cosmwasm/issues/1430&quot;&gt;
              https://github.com/CosmWasm/cosmwasm/issues/1430
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The crate &lt;code&gt;cosmwasm&lt;/code&gt; is &lt;a href=&quot;https://github.com/CosmWasm/cosmwasm/issues/1430&quot;&gt;not used anymore&lt;/a&gt; since spring 2020.
The functionality was split in multiple different crates, such as the standard library &lt;code&gt;cosmwasm-std&lt;/code&gt; and the virtual machine &lt;code&gt;cosmwasm-vm&lt;/code&gt;. An overview can be found in the &lt;a href=&quot;https://github.com/CosmWasm/cosmwasm&quot;&gt;cosmwasm repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you have this crate in your dependency tree, this is very likely by mistake and should be corrected.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0003: Vulnerability in h2</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0003.html</id><updated>2024-01-17T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0003.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0003: Vulnerability in h2"/><published>2024-01-17T12:00:00+00:00</published><summary xml:lang="en">Resource exhaustion vulnerability in h2 may lead to Denial of Service (DoS)</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/h2/RUSTSEC-2024-0003.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/h2/RUSTSEC-2024-0003.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0003&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0003
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Resource exhaustion vulnerability in h2 may lead to Denial of Service (DoS)&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-17&quot;&gt;
          January 17, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-17&quot;&gt;
          January 17, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/h2.html&quot;&gt;h2&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/h2&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/http.html&quot;&gt;#http&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/http2.html&quot;&gt;#http2&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/h2.html&quot;&gt;#h2&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md&quot;&gt;
              https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-002.md
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;related&quot;&gt;Related&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9514&quot;&gt;CVE-2019-9514&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;^0.3.24&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.4.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;An attacker with an HTTP/2 connection to an affected endpoint can send a steady stream of invalid frames to force the
generation of reset frames on the victim endpoint.
By closing their recv window, the attacker could then force these resets to be queued in an unbounded fashion,
resulting in Out Of Memory (OOM) and high CPU usage.&lt;/p&gt;
&lt;p&gt;This fix is corrected in &lt;a href=&quot;https://github.com/hyperium/h2/pull/737&quot;&gt;hyperium/h2#737&lt;/a&gt;, which limits the total number of
internal error resets emitted by default before the connection is closed.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0002: Unsoundness in vmm-sys-util</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0002.html</id><updated>2024-01-13T12:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2024-0002.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0002: Unsoundness in vmm-sys-util"/><published>2024-01-13T12:00:00+00:00</published><summary xml:lang="en">`serde` deserialization for `FamStructWrapper` lacks bound checks that could potentially lead to out-of-bounds memory access</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/vmm-sys-util/RUSTSEC-2024-0002.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/vmm-sys-util/RUSTSEC-2024-0002.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0002&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0002
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;serde&lt;/code&gt; deserialization for &lt;code&gt;FamStructWrapper&lt;/code&gt; lacks bound checks that could potentially lead to out-of-bounds memory access&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-02&quot;&gt;
          January  2, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-13&quot;&gt;
          January 13, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/vmm-sys-util.html&quot;&gt;vmm-sys-util&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/vmm-sys-util&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-50711&quot;&gt;CVE-2023-50711&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-875g-mfp6-g7f9&quot;&gt;GHSA-875g-mfp6-g7f9&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/advisories/GHSA-875g-mfp6-g7f9&quot;&gt;
              https://github.com/advisories/GHSA-875g-mfp6-g7f9
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;5.7 &lt;span class=&quot;tag medium&quot;&gt;
        MEDIUM
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Local&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Changed&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;Low&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L&quot;&gt;CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.12.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.5.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;vmm_sys_util::fam::FamStructWrapper::deserialize&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.12.0, &amp;gt;=0.5.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;h2&gt;Impact&lt;/h2&gt;
&lt;p&gt;An issue was discovered in the &lt;code&gt;FamStructWrapper::deserialize&lt;/code&gt; implementation
provided by the crate for &lt;code&gt;vmm_sys_util::fam::FamStructWrapper&lt;/code&gt;, which can lead
to out of bounds memory accesses. The deserialization does not check that the
length stored in the header matches the flexible array length. Mismatch in the
lengths might allow out of bounds memory access through Rust-safe methods.&lt;/p&gt;
&lt;p&gt;Impacted versions: &amp;gt;= 0.5.0&lt;/p&gt;
&lt;h2&gt;Patches&lt;/h2&gt;
&lt;p&gt;The issue was corrected in version 0.12.0 by inserting a check that verifies
the lengths of compared flexible arrays are equal for any deserialized header
and aborting deserialization otherwise. Moreover, the API was changed so that
header length can only be modified through Rust-unsafe code. This ensures that
users cannot trigger out-of-bounds memory access from Rust-safe code.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2024-0001: Unsoundness in ferris-says</title><id>https://rustsec.org/advisories/RUSTSEC-2024-0001.html</id><updated>2024-01-13T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2024-0001.html" rel="alternate" type="text/html" title="RUSTSEC-2024-0001: Unsoundness in ferris-says"/><published>2024-01-13T12:00:00+00:00</published><summary xml:lang="en">Unsound use of str::from_utf8_unchecked on bytes which are not UTF-8</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/ferris-says/RUSTSEC-2024-0001.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/ferris-says/RUSTSEC-2024-0001.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2024-0001&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2024-0001
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unsound use of str::from_utf8_unchecked on bytes which are not UTF-8&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-13&quot;&gt;
          January 13, 2024
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-13&quot;&gt;
          January 13, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/ferris-says.html&quot;&gt;ferris-says&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/ferris-says&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/rust-lang/ferris-says/pull/21&quot;&gt;
              https://github.com/rust-lang/ferris-says/pull/21
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=0.1.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Affected versions receive a &lt;code&gt;&amp;amp;[u8]&lt;/code&gt; from the caller through a safe API, and pass
it directly to the unsafe &lt;code&gt;str::from_utf8_unchecked&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;The behavior of &lt;code&gt;ferris_says::say&lt;/code&gt; is undefined if the bytes from the caller
don&apos;t happen to be valid UTF-8.&lt;/p&gt;
&lt;p&gt;The flaw was corrected in &lt;a href=&quot;https://github.com/rust-lang/ferris-says/pull/21&quot;&gt;ferris-says#21&lt;/a&gt; by using the safe &lt;code&gt;str::from_utf8&lt;/code&gt;
instead, and returning an error on invalid input. However this fix has not yet
been published to crates.io as a patch version for 0.2.&lt;/p&gt;
&lt;p&gt;Separately, &lt;a href=&quot;https://github.com/rust-lang/ferris-says/pull/32&quot;&gt;ferris-says#32&lt;/a&gt; has introduced a different API for version 0.3
which accepts input as &lt;code&gt;&amp;amp;str&lt;/code&gt; rather than &lt;code&gt;&amp;amp;[u8]&lt;/code&gt;, so is unaffected by this bug.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2023-0078: Unsoundness in tracing</title><id>https://rustsec.org/advisories/RUSTSEC-2023-0078.html</id><updated>2024-01-13T12:00:00+00:00</updated><category term="memory-corruption"/><link href="https://rustsec.org/advisories/RUSTSEC-2023-0078.html" rel="alternate" type="text/html" title="RUSTSEC-2023-0078: Unsoundness in tracing"/><published>2024-01-13T12:00:00+00:00</published><summary xml:lang="en">Potential stack use-after-free in `Instrumented::into_inner`</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/tracing/RUSTSEC-2023-0078.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/tracing/RUSTSEC-2023-0078.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2023-0078&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2023-0078
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Potential stack use-after-free in &lt;code&gt;Instrumented::into_inner&lt;/code&gt;&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-10-19&quot;&gt;
          October 19, 2023
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2024-01-13&quot;&gt;
          January 13, 2024
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/tracing.html&quot;&gt;tracing&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/tracing&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/memory-corruption.html&quot;&gt;memory-corruption&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/use-after-free.html&quot;&gt;#use-after-free&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/tokio-rs/tracing/pull/2765&quot;&gt;
              https://github.com/tokio-rs/tracing/pull/2765
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.1.40&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;=0.1.37&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;tracing::instrument::Instrumented::into_inner&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.1.38&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.1.40&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The implementation of the &lt;a href=&quot;https://docs.rs/tracing/latest/tracing/instrument/struct.Instrumented.html#method.into_inner&quot;&gt;&lt;code&gt;Instrumented::into_inner&lt;/code&gt;&lt;/a&gt; method in affected
versions of this crate contains undefined behavior due to incorrect use of
&lt;a href=&quot;https://doc.rust-lang.org/std/mem/fn.forget.html&quot;&gt;&lt;code&gt;std::mem::forget&lt;/code&gt;&lt;/a&gt; The function creates &lt;code&gt;*const&lt;/code&gt; pointers to &lt;code&gt;self&lt;/code&gt;, calls
&lt;a href=&quot;https://doc.rust-lang.org/std/mem/fn.forget.html&quot;&gt;&lt;code&gt;mem::forget(self)&lt;/code&gt;&lt;/a&gt;, and then moves values out of those
pointers using &lt;a href=&quot;https://doc.rust-lang.org/std/primitive.pointer.html#method.read-1&quot;&gt;&lt;code&gt;std::ptr::read&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-rust&quot;&gt;// To manually destructure `Instrumented` without `Drop`, we
// move it into a ManuallyDrop and use pointers to its fields
let span: *const Span = &amp;amp;this.span;
let inner: *const ManuallyDrop&amp;lt;T&amp;gt; = &amp;amp;this.inner;
mem::forget(self);
// SAFETY: Those pointers are valid for reads, because `Drop` didn&apos;t
//         run, and properly aligned, because `Instrumented` isn&apos;t
//         `#[repr(packed)]`.
let _span = unsafe { span.read() };
let inner = unsafe { inner.read() };
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, the &lt;a href=&quot;https://doc.rust-lang.org/std/mem/fn.forget.html&quot;&gt;&lt;code&gt;mem::forget&lt;/code&gt; documentation&lt;/a&gt; states:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Any resources the value manages, such as heap memory or a file handle, will
linger forever in an unreachable state. &lt;strong&gt;However, it does not guarantee that
pointers to this memory will remain valid.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This means that these pointers are no longer valid. This could result in a stack
use-after-free if LLVM chooses to reuse &lt;code&gt;self&lt;/code&gt;&apos;s stack slot for a rebinding
after the call to &lt;a href=&quot;https://doc.rust-lang.org/std/mem/fn.forget.html&quot;&gt;&lt;code&gt;std::mem::forget&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This undefined behavior has not been observed to cause miscompilation as of Rust
1.73.0. However, any use of this method with the affected versions of &lt;code&gt;tracing&lt;/code&gt;
are unsound.&lt;/p&gt;
&lt;p&gt;The flaw was corrected in commit &lt;a href=&quot;https://github.com/tokio-rs/tracing/commit/20a1762b3fd5f1fafead198fd18e469c68683721&quot;&gt;20a1762&lt;/a&gt; (&lt;a href=&quot;https://github.com/tokio-rs/tracing/pull/2765&quot;&gt;PR #2765&lt;/a&gt;) by replacing the use of
&lt;a href=&quot;https://doc.rust-lang.org/std/mem/fn.forget.html&quot;&gt;&lt;code&gt;std::mem::forget&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;std::mem::ManuallyDrop&lt;/code&gt;, ensuring that the stack slot
is not reused and the pointers remain valid when they are read. The fix is
published in &lt;code&gt;tracing&lt;/code&gt; &lt;a href=&quot;https://crates.io/crates/tracing/0.1.40&quot;&gt;v0.1.40&lt;/a&gt;. Affected versions have been yanked from
crates.io.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/cramertj&quot;&gt;Taylor Cramer&lt;/a&gt; and &lt;a href=&quot;https://github.com/manishearth&quot;&gt;Manish Goregaokar&lt;/a&gt; for finding and correcting
this issue!&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2023-0077: Vulnerability in rosenpass</title><id>https://rustsec.org/advisories/RUSTSEC-2023-0077.html</id><updated>2023-12-21T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2023-0077.html" rel="alternate" type="text/html" title="RUSTSEC-2023-0077: Vulnerability in rosenpass"/><published>2023-12-21T12:00:00+00:00</published><summary xml:lang="en">Remotely exploitable DoS condition in Rosenpass &amp;lt;=0.2.0</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/rosenpass/RUSTSEC-2023-0077.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/rosenpass/RUSTSEC-2023-0077.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2023-0077&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2023-0077
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Remotely exploitable DoS condition in Rosenpass &amp;lt;=0.2.0&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-11-04&quot;&gt;
          November  4, 2023
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-12-21&quot;&gt;
          December 21, 2023
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/rosenpass.html&quot;&gt;rosenpass&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/rosenpass&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/remote.html&quot;&gt;#remote&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/single-byte.html&quot;&gt;#single-byte&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/rosenpass/rosenpass/commit/93439858d1c44294a7b377f775c4fc897a370bb2&quot;&gt;
              https://github.com/rosenpass/rosenpass/commit/93439858d1c44294a7b377f775c4fc897a370bb2
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.1&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Affected version do this crate did not validate the size of buffers when attempting to decode messages.&lt;/p&gt;
&lt;p&gt;This allows an attacker to trigger a panic by sending a UDP datagram with a 1 byte payload over network.&lt;/p&gt;
&lt;p&gt;This flaw was corrected by validating the size of the buffers before attempting to decode the message.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2023-0075: Unsoundness in unsafe-libyaml</title><id>https://rustsec.org/advisories/RUSTSEC-2023-0075.html</id><updated>2023-12-20T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2023-0075.html" rel="alternate" type="text/html" title="RUSTSEC-2023-0075: Unsoundness in unsafe-libyaml"/><published>2023-12-20T12:00:00+00:00</published><summary xml:lang="en">Unaligned write of u64 on 32-bit and 16-bit platforms</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/unsafe-libyaml/RUSTSEC-2023-0075.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/unsafe-libyaml/RUSTSEC-2023-0075.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2023-0075&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2023-0075
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Unaligned write of u64 on 32-bit and 16-bit platforms&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-12-20&quot;&gt;
          December 20, 2023
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-12-20&quot;&gt;
          December 20, 2023
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/unsafe-libyaml.html&quot;&gt;unsafe-libyaml&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/unsafe-libyaml&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unsound
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/unaligned-write.html&quot;&gt;#unaligned-write&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/dtolnay/unsafe-libyaml/issues/21&quot;&gt;
              https://github.com/dtolnay/unsafe-libyaml/issues/21
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.10&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;Affected versions allocate memory using the alignment of &lt;code&gt;usize&lt;/code&gt; and write data
to it of type &lt;code&gt;u64&lt;/code&gt;, without using &lt;code&gt;core::ptr::write_unaligned&lt;/code&gt;. In platforms
with sub-64bit alignment for &lt;code&gt;usize&lt;/code&gt; (including wasm32 and x86) these writes
are insufficiently aligned some of the time.&lt;/p&gt;
&lt;p&gt;If using an ordinary optimized standard library, the bug exhibits Undefined
Behavior so may or may not behave in any sensible way, depending on
optimization settings and hardware and other things. If using a Rust standard
library built with debug assertions enabled, the bug manifests deterministically
in a crash (non-unwinding panic) saying &lt;em&gt;&amp;quot;ptr::write requires that the pointer
argument is aligned and non-null&amp;quot;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No 64-bit platform is impacted by the bug.&lt;/p&gt;
&lt;p&gt;The flaw was corrected by allocating with adequately high alignment on all
platforms.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2023-0076: cpython is unmaintained</title><id>https://rustsec.org/advisories/RUSTSEC-2023-0076.html</id><updated>2023-12-20T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2023-0076.html" rel="alternate" type="text/html" title="RUSTSEC-2023-0076: cpython is unmaintained"/><published>2023-12-20T12:00:00+00:00</published><summary xml:lang="en">`cpython` is unmaintained</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/cpython/RUSTSEC-2023-0076.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/cpython/RUSTSEC-2023-0076.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2023-0076&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2023-0076
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;&lt;code&gt;cpython&lt;/code&gt; is unmaintained&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-11-14&quot;&gt;
          November 14, 2023
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-12-20&quot;&gt;
          December 20, 2023
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/cpython.html&quot;&gt;cpython&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/cpython&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;span class=&quot;tag info&quot;&gt;INFO&lt;/span&gt;
        Unmaintained
        
      &lt;/dd&gt;

      

      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/dgrunwald/rust-cpython/commit/e815555&quot;&gt;
              https://github.com/dgrunwald/rust-cpython/commit/e815555
            &lt;/a&gt;
          &lt;/li&gt;
        
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/dgrunwald/rust-cpython/issues/265&quot;&gt;
              https://github.com/dgrunwald/rust-cpython/issues/265
            &lt;/a&gt;
          &lt;/li&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/dgrunwald/rust-cpython/issues/294&quot;&gt;
              https://github.com/dgrunwald/rust-cpython/issues/294
            &lt;/a&gt;
          &lt;/li&gt;
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        no patched versions
        
      &lt;/dd&gt;

      

      
      
    &lt;/dl&gt;

    
    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;code&gt;cpython&lt;/code&gt; crate and the underlying &lt;code&gt;python3-sys&lt;/code&gt; and &lt;code&gt;python27-sys&lt;/code&gt; crates have been marked as &lt;a href=&quot;https://github.com/dgrunwald/rust-cpython/commit/e815555&quot;&gt;no longer actively maintained&lt;/a&gt; by the developer.&lt;/p&gt;
&lt;p&gt;There are also open issues for unsound code that is currently in these crates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dgrunwald/rust-cpython/issues/265&quot;&gt;cpython#265&lt;/a&gt;: Using some string functions causes segmentation faults on big-endian architectures. Due to incorrect bitfield manipulations, it is possible to create invalid Python objects that crash the Python interpreter.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dgrunwald/rust-cpython/issues/294&quot;&gt;cpython#294&lt;/a&gt;: Python 3.12 is not supported. Due to ABI changes in Python 3.12, calling some string functions will result in invalid Python objects and / or cause out-of-bounds memory accesses.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Recommended alternatives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://crates.io/crates/pyo3&quot;&gt;&lt;code&gt;pyo3&lt;/code&gt;&lt;/a&gt; (version 0.19.2 and newer)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;pyo3&lt;/code&gt; crate is actively maintained. Preliminary support for Python 3.12 was added in version 0.19.2, and version 0.20.0 was released with full support for Python 3.12.&lt;/p&gt;
&lt;p&gt;Both versions implement string functions correctly on big-endian architectures. The endianness issue affecting the &lt;code&gt;cpython&lt;/code&gt; crate was fixed in recent versions of &lt;code&gt;pyo3&lt;/code&gt;.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2023-0074: Vulnerability in zerocopy</title><id>https://rustsec.org/advisories/RUSTSEC-2023-0074.html</id><updated>2023-12-18T12:00:00+00:00</updated><link href="https://rustsec.org/advisories/RUSTSEC-2023-0074.html" rel="alternate" type="text/html" title="RUSTSEC-2023-0074: Vulnerability in zerocopy"/><published>2023-12-18T12:00:00+00:00</published><summary xml:lang="en">Some Ref methods are unsound with some type parameters</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/zerocopy/RUSTSEC-2023-0074.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/zerocopy/RUSTSEC-2023-0074.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2023-0074&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2023-0074
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Some Ref methods are unsound with some type parameters&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-12-14&quot;&gt;
          December 14, 2023
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-12-18&quot;&gt;
          December 18, 2023
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/zerocopy.html&quot;&gt;zerocopy&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/zerocopy&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/ref.html&quot;&gt;#ref&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/refcell.html&quot;&gt;#refcell&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/mutable-aliasing.html&quot;&gt;#mutable-aliasing&lt;/a&gt;
        
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/google/zerocopy/issues/716&quot;&gt;
              https://github.com/google/zerocopy/issues/716
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.9, &amp;lt;0.3.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.2, &amp;lt;0.4.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.4.1, &amp;lt;0.5.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.5.2, &amp;lt;0.6.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.6, &amp;lt;0.7.0&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.31&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.2.2&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;zerocopy::Ref::into_mut&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.2, &amp;lt;0.2.9&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.0, &amp;lt;0.3.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.4.0, &amp;lt;0.4.1&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.5.0, &amp;lt;0.5.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.0, &amp;lt;0.6.6&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.31&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;zerocopy::Ref::into_mut_slice&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.2, &amp;lt;0.2.9&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.0, &amp;lt;0.3.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.4.0, &amp;lt;0.4.1&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.5.0, &amp;lt;0.5.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.0, &amp;lt;0.6.6&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.31&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;zerocopy::Ref::into_ref&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.2, &amp;lt;0.2.9&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.0, &amp;lt;0.3.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.4.0, &amp;lt;0.4.1&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.5.0, &amp;lt;0.5.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.0, &amp;lt;0.6.6&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.31&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;zerocopy::Ref::into_slice&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.2.2, &amp;lt;0.2.9&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.3.0, &amp;lt;0.3.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.4.0, &amp;lt;0.4.1&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.5.0, &amp;lt;0.5.2&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.6.0, &amp;lt;0.6.6&lt;/code&gt;&lt;/li&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.7.0, &amp;lt;0.7.31&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The &lt;code&gt;Ref&lt;/code&gt; methods &lt;code&gt;into_ref&lt;/code&gt;, &lt;code&gt;into_mut&lt;/code&gt;, &lt;code&gt;into_slice&lt;/code&gt;, and &lt;code&gt;into_slice_mut&lt;/code&gt; are unsound
and may allow safe code to exhibit undefined behavior when used with &lt;code&gt;Ref&amp;lt;B, T&amp;gt;&lt;/code&gt; where &lt;code&gt;B&lt;/code&gt;
is &lt;a href=&quot;https://doc.rust-lang.org/core/cell/struct.Ref.html&quot;&gt;&lt;code&gt;cell::Ref&lt;/code&gt;&lt;/a&gt; or
&lt;a href=&quot;https://doc.rust-lang.org/core/cell/struct.RefMut.html&quot;&gt;&lt;code&gt;cell::RefMut&lt;/code&gt;&lt;/a&gt;. Note that these
methods remain sound when used with &lt;code&gt;B&lt;/code&gt; types other than &lt;code&gt;cell::Ref&lt;/code&gt; or &lt;code&gt;cell::RefMut&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See https://github.com/google/zerocopy/issues/716 for a more in-depth analysis.&lt;/p&gt;
&lt;p&gt;The current plan is to yank the affected versions soon. See
https://github.com/google/zerocopy/issues/679 for more detail.&lt;/p&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry><entry><title>RUSTSEC-2023-0073: Vulnerability in candid</title><id>https://rustsec.org/advisories/RUSTSEC-2023-0073.html</id><updated>2023-12-09T12:00:00+00:00</updated><category term="denial-of-service"/><link href="https://rustsec.org/advisories/RUSTSEC-2023-0073.html" rel="alternate" type="text/html" title="RUSTSEC-2023-0073: Vulnerability in candid"/><published>2023-12-09T12:00:00+00:00</published><summary xml:lang="en">Infinite decoding loop through specially crafted payload</summary><content xml:lang="en" type="html">  &lt;article&gt;
    
        &lt;span class=&quot;floating-menu&quot;&gt;
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/commits/main/crates/candid/RUSTSEC-2023-0073.md&quot;&gt;History&lt;/a&gt; ⋅ 
          &lt;a href=&quot;https://github.com/RustSec/advisory-db/edit/main/crates/candid/RUSTSEC-2023-0073.md&quot;&gt;Edit&lt;/a&gt; ⋅
          &lt;a href=&quot;https://api.osv.dev/v1/vulns/RUSTSEC-2023-0073&quot;&gt;JSON (OSV)&lt;/a&gt;
        &lt;/span&gt;
    

    &lt;header&gt;
      &lt;h1&gt;
        
        RUSTSEC-2023-0073
        
      &lt;/h1&gt;
      &lt;span class=&quot;subtitle&quot;&gt;&lt;p&gt;Infinite decoding loop through specially crafted payload&lt;/p&gt;
&lt;/span&gt;
    &lt;/header&gt;

    

    &lt;dl&gt;
      &lt;dt id=&quot;reported&quot;&gt;Reported&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-12-08&quot;&gt;
          December  8, 2023
        &lt;/time&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;issued&quot;&gt;Issued&lt;/dt&gt;
      &lt;dd&gt;
        &lt;time datetime=&quot;2023-12-09&quot;&gt;
          December  9, 2023
        &lt;/time&gt;
        
      &lt;/dd&gt;

      &lt;dt id=&quot;package&quot;&gt;Package&lt;/dt&gt;
      &lt;dd&gt;
        
        
        &lt;a href=&quot;/packages/candid.html&quot;&gt;candid&lt;/a&gt;
          (&lt;a href=&quot;https://crates.io/crates/candid&quot;&gt;crates.io&lt;/a&gt;)
        
        
      &lt;/dd&gt;

      &lt;dt id=&quot;type&quot;&gt;Type&lt;/dt&gt;
      &lt;dd&gt;
        
        Vulnerability
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;categories&quot;&gt;Categories&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;a href=&quot;/categories/denial-of-service.html&quot;&gt;denial-of-service&lt;/a&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;keywords&quot;&gt;Keywords&lt;/dt&gt;
      &lt;dd&gt;
        
          &lt;a href=&quot;/keywords/candid.html&quot;&gt;#candid&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/canister.html&quot;&gt;#canister&lt;/a&gt;
        
          &lt;a href=&quot;/keywords/icp.html&quot;&gt;#icp&lt;/a&gt;
        
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;aliases&quot;&gt;Aliases&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6245&quot;&gt;CVE-2023-6245&lt;/a&gt;
            
          &lt;/li&gt;
          
          &lt;li&gt;
            
            &lt;a href=&quot;https://github.com/advisories/GHSA-7787-p7x6-fq3j&quot;&gt;GHSA-7787-p7x6-fq3j&lt;/a&gt;
            
          &lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      &lt;dt id=&quot;details&quot;&gt;References&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
        
          &lt;li&gt;
            &lt;a href=&quot;https://github.com/dfinity/candid/pull/478&quot;&gt;
              https://github.com/dfinity/candid/pull/478
            &lt;/a&gt;
          &lt;/li&gt;
        
        
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      

      
      &lt;dt id=&quot;cvss_score&quot;&gt;CVSS Score&lt;/dt&gt;
      &lt;dd&gt;7.5 &lt;span class=&quot;tag high&quot;&gt;
        HIGH
      &lt;/span&gt;&lt;/dd&gt;

      &lt;dt id=&quot;cvss_details&quot;&gt;CVSS Details&lt;/dt&gt;
      &lt;dd&gt;
        &lt;dl&gt;
          
          &lt;dt&gt;Attack vector&lt;/dt&gt;&lt;dd&gt;Network&lt;/dd&gt;
          

          
          &lt;dt&gt;Attack complexity&lt;/dt&gt;&lt;dd&gt;Low&lt;/d&gt;
          

          
          &lt;dt&gt;Privileges required&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;User interaction&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Scope&lt;/dt&gt;&lt;dd&gt;Unchanged&lt;/dd&gt;
          

          
          &lt;dt&gt;Confidentiality&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Integrity&lt;/dt&gt;&lt;dd&gt;None&lt;/dd&gt;
          

          
          &lt;dt&gt;Availability&lt;/dt&gt;&lt;dd&gt;High&lt;/dd&gt;
          
        &lt;/dl&gt;
      &lt;/dd&gt;

      &lt;dt id=&quot;cvss&quot;&gt;CVSS Vector&lt;/dt&gt;
      &lt;dd&gt;&lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&quot;&gt;CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H&lt;/a&gt;&lt;/dd&gt;

      

      &lt;dt id=&quot;patched&quot;&gt;Patched&lt;/dt&gt;
      &lt;dd&gt;
        
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.10&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
        
      &lt;/dd&gt;

      
      &lt;dt id=&quot;unaffected&quot;&gt;Unaffected&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;lt;0.9.0&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      

      
      

      
      
    &lt;/dl&gt;

    
    
    &lt;dl&gt;
      &lt;dt&gt;Affected Functions&lt;/dt&gt;
      &lt;dd&gt;Version&lt;/dd&gt;
      
      &lt;dt&gt;&lt;code&gt;candid::Decode&lt;/code&gt;&lt;/dt&gt;
      &lt;dd&gt;
        &lt;ul&gt;
          
          &lt;li&gt;&lt;code&gt;&amp;gt;=0.9.0, &amp;lt;0.9.10&lt;/code&gt;&lt;/li&gt;
          
        &lt;/ul&gt;
      &lt;/dd&gt;
      
    &lt;/dl&gt;
    

    

    &lt;h3 id=&quot;description&quot;&gt;Description&lt;/h3&gt;
    &lt;p&gt;The Candid library causes a Denial of Service while parsing a specially crafted payload with &lt;code&gt;empty&lt;/code&gt; data type. For example, if the payload is &lt;code&gt;record { * ; empty }&lt;/code&gt; and  the canister interface expects &lt;code&gt;record { * }&lt;/code&gt; then the rust candid decoder treats &lt;code&gt;empty&lt;/code&gt; as an extra field required by the type.  The problem with type &lt;code&gt;empty&lt;/code&gt; is that the candid rust library wrongly categorizes &lt;code&gt;empty&lt;/code&gt; as a recoverable error when skipping the field and thus causing an infinite decoding loop.&lt;/p&gt;
&lt;p&gt;Canisters using affected versions of candid are exposed to denial of service by causing the decoding to run indefinitely until the canister traps due to reaching maximum instruction limit per execution round. Repeated exposure to the payload will result in degraded performance of the canister.&lt;/p&gt;
&lt;p&gt;For asset canister users, &lt;code&gt;dfx&lt;/code&gt; versions &lt;code&gt;&amp;gt;= 0.14.4&lt;/code&gt; to &lt;code&gt;&amp;lt;= 0.15.2-beta.0&lt;/code&gt; ships asset canister with an affected version of candid.&lt;/p&gt;
&lt;h3&gt;Unaffected&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Rust canisters using candid &lt;code&gt;&amp;lt; 0.9.0&lt;/code&gt; or &lt;code&gt;&amp;gt;= 0.9.10&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rust canister interfaces of type other than &lt;code&gt;record { * }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Motoko based canisters&lt;/li&gt;
&lt;li&gt;dfx (for asset canister) &lt;code&gt;&amp;lt;= 0.14.3&lt;/code&gt; or &lt;code&gt;&amp;gt;= 0.15.2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dfinity/candid/security/advisories/GHSA-7787-p7x6-fq3j&quot;&gt;GitHub Security Advisory (GHSA-7787-p7x6-fq3j)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dfinity/candid/pull/478&quot;&gt;dfinity/candid/pull/478&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://internetcomputer.org/docs/current/references/candid-ref&quot;&gt;Candid Library Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dfinity/candid/blob/master/spec/Candid.md&quot;&gt;Candid Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://internetcomputer.org/docs/current/references/ic-interface-spec&quot;&gt;Internet Computer Specification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


    &lt;p id=&quot;license&quot; class=&quot;license&quot;&gt;Advisory available under &lt;a href=&quot;https://spdx.org/licenses/CC0-1.0.html&quot;&gt;CC0-1.0&lt;/a&gt;
    license.

    
    &lt;/p&gt;
  &lt;/article&gt;</content></entry></feed>